/**
 * Sample Application Flow OAuth2 Project
 * This is an example of using OAuth2 Application Flow in a specification to describe security to your API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.CarbonDioxide
import io.swagger.client.model.Pressure
import io.swagger.client.model.RelativeHumidity
import io.swagger.client.model.Temperature
import io.swagger.client.model.VPD
import io.swagger.client.model.Wind
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object AirApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 405 :  (Invalid input)
   * 
   * @param body A new CO2 reading
   */
  def addCO2(body: CarbonDioxide): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/co2", "application/json")
      .withBody(body)
      .withErrorResponse[Unit](405)
        /**
   * 
   * 
   * Expected answers:
   *   code 405 :  (Invalid input)
   * 
   * @param body A new relative humidity reading
   */
  def addHumidity(body: RelativeHumidity): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/humidity", "application/json")
      .withBody(body)
      .withErrorResponse[Unit](405)
        /**
   * 
   * 
   * Expected answers:
   *   code 405 :  (Invalid input)
   * 
   * @param body A new pressure reading
   */
  def addPressure(body: Pressure): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/pressure", "application/json")
      .withBody(body)
      .withErrorResponse[Unit](405)
        /**
   * 
   * 
   * Expected answers:
   *   code 405 :  (Invalid input)
   * 
   * @param body A new temperature reading
   */
  def addTemp(body: Temperature): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/temperature", "application/json")
      .withBody(body)
      .withErrorResponse[Unit](405)
        /**
   * 
   * 
   * Expected answers:
   *   code 405 :  (Invalid input)
   * 
   * @param body A new relative humidity reading
   */
  def addVPD(body: VPD): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/vpd", "application/json")
      .withBody(body)
      .withErrorResponse[Unit](405)
        /**
   * 
   * 
   * Expected answers:
   *   code 405 :  (Invalid input)
   * 
   * @param body A new Wind reading
   */
  def addWind(body: Wind): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/wind", "application/json")
      .withBody(body)
      .withErrorResponse[Unit](405)
        /**
   * This is an example opeartion to show how security is applied to the call.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   */
  def co2Get(): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/co2", "application/json")
      .withSuccessResponse[Unit](200)
        /**
   * This is an example opeartion to show how security is applied to the call.
   * 
   * Expected answers:
   *   code 200 :  (OK)
   */
  def humidityGet(): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/humidity", "application/json")
      .withSuccessResponse[Unit](200)
        /**
   * Air pressure measurement
   * 
   * Expected answers:
   *   code 200 :  (OK)
   */
  def pressureGet(): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/pressure", "application/json")
      .withSuccessResponse[Unit](200)
        /**
   * Get temperature reading
   * 
   * Expected answers:
   *   code 200 :  (OK)
   */
  def temperatureGet(): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/temperature", "application/json")
      .withSuccessResponse[Unit](200)
        /**
   * Vapor Pressure Deficit is a measure of the difference (or deficit) between the pressure exerted by the moisture currently in the air and the pressure at saturation
   * 
   * Expected answers:
   *   code 200 :  (OK)
   */
  def vpdGet(): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/vpd", "application/json")
      .withSuccessResponse[Unit](200)
        /**
   * Get wind data indoors or outdoors
   * 
   * Expected answers:
   *   code 200 :  (OK)
   */
  def windGet(): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "https://virtserver.swaggerhub.com/mowi22/Agtech-standard-model/1.0.0", "/wind", "application/json")
      .withSuccessResponse[Unit](200)
      

}

